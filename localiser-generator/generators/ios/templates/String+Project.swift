// Autogenerated by Localiser (https://github.com/gotev/localiser)
// DO NOT EDIT
import Foundation

extension String {
    public static var {{ projectShortIdentifier }}: {{ projectShortIdentifier|capitalize }}.Type {
        {{ projectShortIdentifier|capitalize }}.self
    }

    public struct {{ projectShortIdentifier|capitalize }} {}
}

/*
 Workaround to retrieve right path of the Bundle when the call is made from a
 different Package
 BUG REFERENCE: https://developer.apple.com/forums/thread/664295
 */

private class OverrideBundleFinder {}
extension Foundation.Bundle {
    static var overrideModule: Bundle = {
        /* The name of your local package, prepended by "LocalPackages_" for iOS and "PackageName_" for macOS. You may have same PackageName and TargetName*/
        let bundleName = "{{ projectPackageName }}_{{ projectPackageName }}"
        let candidates = [
            /* Bundle should be present here when the package is linked into an App. */
            Bundle.main.resourceURL,
            /* Bundle should be present here when the package is linked into a framework. */
            Bundle(for: OverrideBundleFinder.self).resourceURL,
            /* For command-line tools. */
            Bundle.main.bundleURL,
            /* Bundle should be present here when running previews from a different package (this is the path to "â€¦/Debug-iphonesimulator/"). */
            Bundle(for: OverrideBundleFinder.self).resourceURL?.deletingLastPathComponent().deletingLastPathComponent().deletingLastPathComponent(),
            Bundle(for: OverrideBundleFinder.self).resourceURL?.deletingLastPathComponent().deletingLastPathComponent(),
        ]

        for candidate in candidates {
            let bundlePath = candidate?.appendingPathComponent(bundleName + ".bundle")
            if let bundle = bundlePath.flatMap(Bundle.init(url:)) {
                return bundle
            }
        }
        fatalError("unable to find bundle. BUG REFERENCE: https://developer.apple.com/forums/thread/664295")
    }()
}
